{"version":3,"sources":["components/profile/Profile.js","components/obsession/Obsession.js","components/FluidText.js","components/contact/Contact.js","components/fullpage/fullpage.js","components/hero-banner/HeroBanner.js","models/Dimensions.js","components/theme.js","App.js","serviceWorker.js","index.js"],"names":["Profile","animateIn","style","className","Obsession","props","hobbies","state","index","prevX","e","this","screenX","setState","Math","floor","random","length","onMouseMove","__mouseMove","bind","React","Component","FluidText","styled","fluid","typography","Contact","href","action","method","type","name","id","value","Fullpage","licenseKey","easingcss3","scrollingSpeed","sectionsColor","anchor","render","fullpageApi","Wrapper","bannerHeight","height","window","innerHeight","__menus","url","map","section","key","toUpperCase","HeroBanner","target","icon","size","fontSize","color","theme","breakpoints","fontSizes","_fluidSystem","startingWidth","colors","white","black","oxblood","grain","tan","spaces","fluidStart","library","add","fab","faCheckSquare","faCoffee","faBars","App","apptheme","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59b6551f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useSpring} from 'react-spring'\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\nimport { Transition } from 'react-spring/renderprops'\r\nimport './Profile.css';\r\n\r\nfunction Profile() {\r\n\r\n  return (\r\n    <ScrollAnimation animateIn=\"fadeIn\" style={{'overflowY': 'visible'}}>\r\n      <div>\r\n        <h2>Hello There!<br /> I'm <strong>Gimel</strong>.</h2>\r\n        <div className=\"info-section\">\r\n        <p>Application Development runs in my veins.</p>\r\n        <p>Die-hard fan of Google Technology. Yes, a Web Developer</p>\r\n        <p>But if you don't ask, I love Performance Arts</p>\r\n        </div>\r\n      </div>\r\n    </ScrollAnimation>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useCallback } from 'react';\r\nimport { useSpring } from 'react-spring'\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\nimport { Transition } from 'react-spring/renderprops'\r\nimport './Obsession.css';\r\n\r\nclass Obsession extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { index: 0, prevX: 0 };\r\n    }\r\n\r\n    hobbies = ['React', 'ReactNative', 'CSS', \r\n    'SASS', 'Performance Tuning', \r\n    'Adobe Premier', 'Angular', 'Shell Scripts', \r\n    'Game Development', 'SQL', 'C#.Net', 'Windows Presentation Foundation',\r\n    'Javascript', 'Internet of Things']\r\n\r\n    __mouseMove(e){\r\n        if(this.state.prevX > (e.screenX + 20) || this.state.prevX < (e.screenX - 20)){\r\n            this.setState( { prevX: e.screenX });\r\n            this.setState({ index: Math.floor(Math.random() * Math.floor(this.hobbies.length)) } );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { index } = this.state\r\n    return (\r\n        <ScrollAnimation animateIn=\"fadeIn\" >\r\n            <div onMouseMove={this.__mouseMove.bind(this)} className=\"hobby\">\r\n                <h2>Now, I'm working with <br /><strong>{this.hobbies[this.state.index]}</strong>.</h2>\r\n                <div className=\"info-section\">\r\n                <p>I don't know if I have sickness... </p>\r\n                <p>To be obsessed in mobile development and everything in digital world</p>\r\n                <p>But if this is an illness, I don't wanna be cured.</p>\r\n                </div>\r\n            </div>\r\n        </ScrollAnimation>\r\n    );\r\n    }\r\n}\r\nexport default Obsession;\r\n","import styled from \"styled-components\";\r\nimport { typography } from \"styled-system\";\r\nimport fluid from \"fluid-system\";\r\n\r\nconst FluidText = styled(\"p\")(\r\n  fluid(typography) \r\n)\r\n\r\nexport default FluidText;","import React from 'react';\r\nimport { __screenHeight } from '../../models/Dimensions'\r\nimport { useSpring, animated as a, interpolate } from 'react-spring'\r\nimport './Contact.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport styled from \"styled-components\";\r\nimport Fullpage from \"../fullpage/fullpage\"\r\nimport FluidText from \"../FluidText\";\r\n\r\nfunction Contact(){\r\n  return (\r\n    <div>\r\n        <div className=\"heading\">\r\n            <h4>Let&rsquo;s make things happen.</h4>\r\n            <a href=\"mailto:gimelcontz@gmail.com\" style={{ 'color': '#9f9f9f' }} >gimelcontz@gmail.com</a>\r\n        </div>\r\n        <form action=\"https://formspree.io/mknjgdaj\" method=\"POST\">\r\n            <div className=\"form-group\">\r\n                <span className='label'>NAME</span>\r\n                <input type=\"text\" name=\"name\"/>\r\n            </div>\r\n            <div className=\"form-group email\">\r\n                <span className='label'>EMAIL</span>\r\n                <input type=\"email\" name=\"_replyto\"/>\r\n            </div>\r\n            <div className=\"message-area\">\r\n                <div className=\"form-group\">\r\n                    <span className='label'>MESSAGE</span>\r\n                    <textarea  name=\"message\" id=\"message\" ></textarea>\r\n                </div>\r\n                <input type=\"submit\" value=\"Send\" className='submit' />\r\n            </div>\r\n        </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Contact;\r\n","import React  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactFullpage from '@fullpage/react-fullpage';\r\nimport Profile from '../profile/Profile'\r\nimport Obsession from '../obsession/Obsession'\r\nimport Contact from '../contact/Contact'\r\n\r\nconst Fullpage = () => (\r\n    <ReactFullpage\r\n    //fullpage options\r\n    licenseKey = {'g1wk&AR^c1'}\r\n    easingcss3 = {'cubic-bezier(1, 0.01, 0.70, 0.075)'}\r\n    scrollingSpeed = {1000} /* Options here */\r\n    sectionsColor = {['transparent', '#ffffff', '#ffffff', 'ffffff', '#ffffff']}\r\n    anchor = {['banner', 'profile', 'hobby']}\r\n    render={({ state, fullpageApi }) => {\r\n      return (\r\n        <ReactFullpage.Wrapper>\r\n          <div className=\"section\" id=\"banner\">\r\n          </div>\r\n          <ReactFullpage.Wrapper>\r\n            <div className=\"section\" id=\"profile\">\r\n              <Profile />\r\n            </div>\r\n            <div className=\"section\" id=\"hobby\">\r\n              <Obsession />\r\n            </div>\r\n            <div className=\"section\" id=\"contact\">\r\n              <Contact />\r\n            </div>\r\n          </ReactFullpage.Wrapper>\r\n        </ReactFullpage.Wrapper>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default Fullpage;","import React, { useCallback } from 'react';\r\nimport { __screenHeight } from '../../models/Dimensions'\r\nimport { useSpring, animated as a, interpolate } from 'react-spring'\r\nimport './HeroBanner.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport styled from \"styled-components\";\r\nimport Fullpage from \"../fullpage/fullpage\"\r\nimport FluidText from \"../FluidText\";\r\n\r\n/***** COMPONENTS  *****/\r\nimport Profile from '../profile/Profile'\r\n\r\nconst bannerHeight = {\r\n  height: __screenHeight()\r\n};\r\n\r\nconst sections = [\r\n  {  id: 'profile',\r\n     url: \"profile-sect\" }, \r\n  { id: 'experience',\r\n    url: \"exp-sect\" }, \r\n  { id: 'works',\r\n    url: \"work-sect\" },\r\n  { id: 'stacks',\r\n    url: \"stacks-sect\" },\r\n  { id: 'contact',\r\n    url: \"contact-sect\" }\r\n];\r\n\r\nconst __menus = sections.map((section) =>\r\n  <li key={section.id}>\r\n    <a href={'#' + section.url}>{section.id.toUpperCase()}</a>\r\n  </li>\r\n);\r\n\r\nfunction HeroBanner(){\r\n  return (\r\n      <header className=\"App-header\" style={bannerHeight}>\r\n        <div className=\"row\">\r\n          <div className=\"main-content col-md-7\">\r\n          <Fullpage />\r\n            <div className=\"social-icons\">\r\n              <ul>\r\n                <li><a href=\"https://fb.com/gicontz\" target='_blank'><FontAwesomeIcon icon={['fab', 'facebook']} size=\"2x\"/></a></li>\r\n                <li><a href=\"https://twitter.com/gimickan\" target='_blank'><FontAwesomeIcon icon={['fab', 'twitter']} size=\"2x\"/></a></li>\r\n                <li><a href=\"https://github.com/gicontz\" target='_blank'><FontAwesomeIcon icon={['fab', 'github']} size=\"2x\"/></a></li>\r\n                <li><a href=\"https://instagram.com/gimickan\" target='_blank'><FontAwesomeIcon icon={['fab', 'instagram']} size=\"2x\"/></a></li>              \r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"side-menu col-md-5\" style={bannerHeight}>\r\n            <div className=\"menu-nav text-left\">\r\n                <a href=\"#\" className=\"mobile-menu\">\r\n                  <FontAwesomeIcon icon=\"bars\" size=\"sm\" className=\"menu-bar-icon\" /><span>MENU</span>\r\n                </a>\r\n\r\n                <ul className=\"menu-list sm-scr\">\r\n                  { __menus }\r\n                </ul>\r\n            </div>\r\n              <div className=\"def-section\">\r\n                <dl className=\"name-def\">\r\n                  <rt>/jim-el/</rt>\r\n                  <dt><h1>gimel</h1></dt>\r\n                  <FluidText fontSize={[1,2]} color=\"#565656\">\r\n                     third alphabet character <br/>\r\n                      in Hebrew and the first <br/>\r\n                      name of a game changer\r\n                  </FluidText>\r\n                </dl>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n  );\r\n}\r\nexport default HeroBanner;\r\n","\r\n\r\nexport const __screenHeight = () => {\r\n    return window.innerHeight;\r\n}","const theme = {\r\n  breakpoints: [\"768px\", \"1024px\"],\r\n  fontSizes: [10, 13, 16, 19, 23, 27, 33, 39],\r\n  _fluidSystem: {\r\n    startingWidth: 320\r\n  },\r\n  colors: {\r\n    white: '#f7f7f7',\r\n    black: '#5656556',\r\n    oxblood: '#76323f',\r\n    grain: '#d7cec7',\r\n    tan:'c09f80'\r\n  },\r\n  spaces: [0, 2, 10, 15, 25, 30, 50]\r\n};\r\n\r\n\r\ntheme.breakpoints.fluidStart = \"320px\";\r\n\r\n\r\nexport default theme;","import React from 'react';\r\nimport HeroBanner from './components/hero-banner/HeroBanner';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCheckSquare, faCoffee, faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from \"./components/theme\";\r\nimport \"animate.css/animate.min.css\";\r\nimport './App.css';\r\n\r\nlibrary.add(fab, faCheckSquare, faCoffee, faBars);\r\n\r\nconst App = props => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    \r\n      <div className=\"App\">\r\n        <HeroBanner apptheme={theme}/>\r\n      </div>\r\n    \r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}